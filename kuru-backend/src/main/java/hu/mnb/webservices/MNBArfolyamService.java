package hu.mnb.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * MNB curreny exchange rate webservice.
 *
 * This class was generated by Apache CXF 3.0.1
 * 2014-10-16T20:27:06.971+02:00
 * Generated source version: 3.0.1
 * 
 */
@WebServiceClient(name = "MNBArfolyamService", 
                  wsdlLocation = "http://www.mnb.hu/arfolyamok.asmx?WSDL",
                  targetNamespace = "http://www.mnb.hu/webservices/") 
public class MNBArfolyamService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.mnb.hu/webservices/", "MNBArfolyamService");
    public final static QName MNBArfolyamServiceSoap12 = new QName("http://www.mnb.hu/webservices/", "MNBArfolyamServiceSoap12");
    public final static QName MNBArfolyamServiceSoap = new QName("http://www.mnb.hu/webservices/", "MNBArfolyamServiceSoap");
    static {
        URL url = null;
        try {
            url = new URL("http://www.mnb.hu/arfolyamok.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MNBArfolyamService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.mnb.hu/arfolyamok.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public MNBArfolyamService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MNBArfolyamService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MNBArfolyamService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MNBArfolyamService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MNBArfolyamService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MNBArfolyamService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns MNBArfolyamServiceSoap
     */
    @WebEndpoint(name = "MNBArfolyamServiceSoap12")
    public MNBArfolyamServiceSoap getMNBArfolyamServiceSoap12() {
        return super.getPort(MNBArfolyamServiceSoap12, MNBArfolyamServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MNBArfolyamServiceSoap
     */
    @WebEndpoint(name = "MNBArfolyamServiceSoap12")
    public MNBArfolyamServiceSoap getMNBArfolyamServiceSoap12(WebServiceFeature... features) {
        return super.getPort(MNBArfolyamServiceSoap12, MNBArfolyamServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns MNBArfolyamServiceSoap
     */
    @WebEndpoint(name = "MNBArfolyamServiceSoap")
    public MNBArfolyamServiceSoap getMNBArfolyamServiceSoap() {
        return super.getPort(MNBArfolyamServiceSoap, MNBArfolyamServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MNBArfolyamServiceSoap
     */
    @WebEndpoint(name = "MNBArfolyamServiceSoap")
    public MNBArfolyamServiceSoap getMNBArfolyamServiceSoap(WebServiceFeature... features) {
        return super.getPort(MNBArfolyamServiceSoap, MNBArfolyamServiceSoap.class, features);
    }

}
